stages:
        - building_part1
        - building_part2
        - testing
        - pushing_images
        - pushing_manifest
sudo: required
language: generic
dist: xenial
     
# Only build tags
#if: tag IS present
cache:
  directories:
        - docker_cached
jobs:
  include:
        - stage: building_part1

          ### x86 Docker images
          env:
              CACHE_NAME=X86
          install:
          - ./.travis/configure_docker.sh #upgrading docker
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          script:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - cd nextcloudpi
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & 
          - DOCKER_BUILDKIT=1 docker build . -f docker/debian-ncp/Dockerfile -t ownyourbits/debian-ncp-amd64:latest --pull --build-arg arch=amd64 --build-arg arch_qemu=x86_64 > output
          - sed -i "/innodb_file_format=barracuda/a open_files_limit=65536" lamp.sh
          - DOCKER_BUILDKIT=1 docker build . -f docker/lamp/Dockerfile -t ownyourbits/lamp-amd64:latest --build-arg arch=amd64 > output
          - sed -i '/open_files_limit=65536/d' lamp.sh
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloud/Dockerfile -t ownyourbits/nextcloud-amd64:latest --build-arg arch=amd64 > output
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloudpi/Dockerfile -t ownyourbits/nextcloudpi-amd64:latest --build-arg arch=amd64 > output
          - docker save --output docker_cached/debian-ncp-amd64.tar ownyourbits/debian-ncp-amd64:latest
          - docker save --output docker_cached/lamp-amd64.tar ownyourbits/lamp-amd64:latest
          - docker save --output docker_cached/nextcloud-amd64.tar ownyourbits/nextcloud-amd64:latest
          - docker save --output docker_cached/nextcloudpi-amd64.tar ownyourbits/nextcloudpi-amd64:latest

        - 
          ### armhf Docker images
          env:
              CACHE_NAME=ARMHF
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          script:
          - cd nextcloudpi
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - DOCKER_BUILDKIT=1 docker build . -f docker/debian-ncp/Dockerfile -t ownyourbits/debian-ncp-armhf:latest --pull --build-arg arch=armhf --build-arg arch_qemu=arm > output
          - sed -i "/innodb_file_format=barracuda/a open_files_limit=65536" lamp.sh
            #- sed -i "/innodb_file_format=barracuda/a innodb_force_recovery=1" lamp.sh
          - tail -f output &
          - DOCKER_BUILDKIT=1 docker build . -f docker/lamp/Dockerfile -t ownyourbits/lamp-armhf:latest --build-arg arch=armhf > output
          - sed -i '/open_files_limit=65536/d' lamp.sh
          - docker save --output docker_cached/debian-ncp-armhf.tar ownyourbits/debian-ncp-armhf:latest
          - docker save --output docker_cached/lamp-armhf.tar ownyourbits/lamp-armhf:latest

        -
          ### arm64 Docker images
          env:
              CACHE_NAME=ARM64
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          script:
          - cd nextcloudpi
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - DOCKER_BUILDKIT=1 docker build . -f docker/debian-ncp/Dockerfile -t ownyourbits/debian-ncp-arm64v8:latest --build-arg arch=arm64v8 --build-arg arch_qemu=aarch64 > output
          - sed -i "/innodb_file_format=barracuda/a open_files_limit=65536" lamp.sh
            #- sed -i "/innodb_file_format=barracuda/a innodb_force_recovery=1" lamp.sh
          - tail -f output &
          - DOCKER_BUILDKIT=1 docker build . -f docker/lamp/Dockerfile -t ownyourbits/lamp-arm64v8:latest --build-arg arch=arm64v8 > output
          - sed -i '/open_files_limit=65536/d' lamp.sh
          - docker save --output docker_cached/debian-ncp-arm64v8.tar ownyourbits/debian-ncp-arm64v8:latest
          - docker save --output docker_cached/lamp-arm64v8.tar ownyourbits/lamp-arm64v8:latest

        - stage: building_part2

          #Arms images usually take some time to get built alltogether so we split their building in 2 stages

          ### armhf Docker images
          env:
              CACHE_NAME=ARMHF
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          before_script:
          - cd nextcloudpi
          - docker load --input docker_cached/lamp-armhf.tar

          script: 
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloud/Dockerfile -t ownyourbits/nextcloud-armhf:latest --build-arg arch=armhf > output
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloudpi/Dockerfile -t ownyourbits/nextcloudpi-armhf:latest --build-arg arch=armhf > output
          - docker save --output docker_cached/nextcloud-armhf.tar ownyourbits/nextcloud-armhf:latest
          - docker save --output docker_cached/nextcloudpi-armhf.tar ownyourbits/nextcloudpi-armhf:latest
        -
          ### arm64v8 Docker images
          env:
              CACHE_NAME=ARM64
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          before_script:
          - cd nextcloudpi
          - docker load --input docker_cached/lamp-arm64v8.tar

          script: 
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloud/Dockerfile -t ownyourbits/nextcloud-arm64v8:latest --build-arg arch=arm64v8 > output
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloudpi/Dockerfile -t ownyourbits/nextcloudpi-arm64v8:latest --build-arg arch=arm64v8 > output
          - docker save --output docker_cached/nextcloud-arm64v8.tar ownyourbits/nextcloud-arm64v8:latest
          - docker save --output docker_cached/nextcloudpi-arm64v8.tar ownyourbits/nextcloudpi-arm64v8:latest

        - stage: testing

          ### x86 Docker images
          env:
              CACHE_NAME=X86
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - cd nextcloudpi
          - ./../.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features      
          - export MOZ_HEADLESS=1
          - sudo apt-get install python3-pip
          - sudo python3 -m pip install selenium
          - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          - tar -xvzf geckodriver*
          - chmod +x geckodriver
          - export PATH=$PATH:$PWD
            
          before_script:
          - docker load --input docker_cached/nextcloudpi-amd64.tar
          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - docker run -d -p 4443:4443 -p 443:443 -p 80:80 -v ncdata:/data --name nextcloudpi ownyourbits/nextcloudpi-amd64:latest ${IP}

          script:
          - sleep 60
          - ./tests/activation_tests.py ${IP}
          - sleep 60
          - ./tests/nextcloud_tests.py ${IP}
          - sleep 5
          - ./tests/system_tests.py ncp@${IP}

        -
          ### armhf Docker images
          env:
              CACHE_NAME=ARMHF
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - cd nextcloudpi
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./../.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features      
          - export MOZ_HEADLESS=1
          - sudo apt-get install python3-pip
          - sudo python3 -m pip install selenium
          - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          - tar -xvzf geckodriver*
          - chmod +x geckodriver
          - export PATH=$PATH:$PWD
            
          before_script:
          - docker load --input docker_cached/nextcloudpi-armhf.tar
          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - docker run -d -p 4443:4443 -p 443:443 -p 80:80 -v ncdata:/data --name nextcloudpi ownyourbits/nextcloudpi-armhf:latest ${IP}

          script:
          - sleep 60
          - ./tests/activation_tests.py ${IP}
          - sleep 60
          - ./tests/nextcloud_tests.py ${IP}
          - sleep 5
          - ./tests/system_tests.py ncp@${IP} 

        -
          ### arm64 Docker images
          env:
              CACHE_NAME=ARM64
          install:
          - git clone https://github.com/nextcloud/nextcloudpi.git
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh
          - cd nextcloudpi
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features      
          - export MOZ_HEADLESS=1
          - sudo apt-get install python3-pip
          - sudo python3 -m pip install selenium
          - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          - tar -xvzf geckodriver*
          - chmod +x geckodriver
          - export PATH=$PATH:$PWD
            
          before_script:
          - docker load --input docker_cached/nextcloudpi-arm64v8.tar
          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - docker run -d -p 4443:4443 -p 443:443 -p 80:80 -v ncdata:/data --name nextcloudpi ownyourbits/nextcloudpi-arm64v8:latest ${IP}

          script:
          - sleep 60
          - ./tests/activation_tests.py ${IP}
          - sleep 60
          - ./tests/nextcloud_tests.py ${IP}
          - sleep 5
          - ./tests/system_tests.py ncp@${IP} 
          
notifications:
  email: false
